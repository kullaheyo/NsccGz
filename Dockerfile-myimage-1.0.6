FROM eclipse/cpp_gcc:latest

ADD . /home/app
ADD my_modulefiles /etc/modulefiles
ADD sources.list /etc/apt
ENV DEBIAN_FRONTEND=noninteractive
 
# add apt source
RUN sudo apt-get update
RUN sudo apt-get install -y --assume-yes apt-transport-https ca-certificates curl software-properties-common
RUN sudo apt-get install -y --assume-yes apt-utils vim libssl-dev tcl environment-modules

#解决每次启动时不自动source ~/.bash_profile的问题
RUN echo "source ~/.bash_profile" >> ~/.bashrc

#openssl
WORKDIR /home/app
RUN sudo apt-get update \  
	&& sudo apt-get install -y build-essential checkinstall zlib1g-dev libtemplate-perl
RUN sudo tar -zxvf openssl-1.0.2p.tar.gz
WORKDIR /home/app/openssl-1.0.2p
RUN sudo ./config \ 
	&& sudo make \
	&& sudo make test \
	&& sudo make install
ENV PATH "/usr/local/ssl/bin:$PATH"
ENV OPENSSL_ROOT_DIR="/usr/local/ssl" 
ENV OPENSSL_CRYPTO_DIR="/usr/local/ssl/lib" 
ENV OPENSSL_INCLUDE_DIR="/usr/local/ssl/include" 
RUN echo "export PATH=\"/usr/local/ssl/bin:$PATH\"" >> ~/.bashrc \
    && echo "export OPENSSL_ROOT_DIR=\"/usr/local/ssl\"" >> ~/.bashrc \ 
	&& echo "export OPENSSL_CRYPTO_DIR=\"/usr/local/ssl/lib\"" >> ~/.bashrc \
	&& echo "export OPENSSL_INCLUDE_DIR=\"/usr/local/ssl/include\"" >> ~/.bashrc 

#cmake
WORKDIR /home/app
RUN sudo tar -zxvf cmake-3.19.8.tar.gz
WORKDIR /home/app/cmake-3.19.8
RUN sudo ./bootstrap && sudo make && sudo make install
RUN echo "export PATH=\"/usr/local/cmake/bin:$PATH\"" >> ~/.bashrc
ENV PATH "/usr/local/cmake/bin:$PATH" 

#gromacs
RUN sudo apt-get install -y fftw3 fftw3-dev pkg-config
WORKDIR /home/app
RUN sudo tar -zxvf gromacs-5.1.1.tar.gz
WORKDIR /home/app/gromacs-5.1.1
RUN sudo mkdir build
WORKDIR /home/app/gromacs-5.1.1/build
RUN sudo cmake .. -DGMG_BUILD_OWN_FFTW=ON -DREGRESSIONTEST_DOWNLOAD=ON \
	&& sudo make \
	&& sudo make check \
	&& sudo make install
#RUN /bin/bash -c "source /usr/local/gromacs/bin/GMXRC" #add modulefile before. close this

#module
RUN echo "source /usr/share/modules/init/bash" >> ~/.bash_profile
#RUN echo "module() { eval `/usr/bin/modulecmd bash $*`; }" >> ~/.bash_profile \
RUN echo "module() { eval \`/usr/bin/modulecmd bash \$*\`; }" >> ~/.bash_profile \
	&& echo "export -f module" >> ~/.bash_profile \
	&& echo "export MODULEPATH=/etc/modulefiles" >> ~/.bash_profile

